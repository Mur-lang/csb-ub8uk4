{"version":3,"sources":["index.js"],"names":["App","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","this","call","state","server_seed","amount","_createClass","key","value","_this2","chain","i","push","crypto","createHash","update","length","digest","React","createElement","className","onChange","e","setState","target","map","seed","index","hash","createHmac","divisible","mod","val","o","parseInt","substring","point","h","slice","Math","pow","floor","toFixed","getPoint","style","color","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"srBAIsB,IAEhBA,EAAG,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,EAAAJ,GACP,SAAAA,EAAYK,GAAO,IAAAC,EAKf,OALeC,YAAAC,KAAAR,IACjBM,EAAAH,EAAAM,KAAAD,KAAMH,IACDK,MAAQ,CACXC,YAAa,GACbC,OAAQ,IACRN,EAsGH,OArGAO,YAAAb,EAAA,EAAAc,IAAA,SAAAC,MACD,WAKE,IALO,IAAAC,EAAAR,KAGDS,EAAQ,CAACT,KAAKE,MAAMC,aAEjBO,EAAI,EAAGA,EAAIV,KAAKE,MAAME,OAAQM,IACrCD,EAAME,KACJC,IACGC,WAAW,UACXC,OAAOL,EAAMA,EAAMM,OAAS,IAC5BC,OAAO,QAQd,OACEC,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,sCACJD,IAAAC,cAAA,SACEX,MAAOP,KAAKE,MAAMC,YAClBiB,SAAU,SAAAC,GAAC,OAAIb,EAAKc,SAAS,CAAEnB,YAAakB,EAAEE,OAAOhB,WAEvDU,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAI,gDACJD,IAAAC,cAAA,SACEX,MAAOP,KAAKE,MAAME,OAClBgB,SAAU,SAAAC,GAAC,OAAIb,EAAKc,SAAS,CAAElB,OAAQiB,EAAEE,OAAOhB,WAGlDU,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAI,iBAEFlB,KAAKE,MAAMC,aAAiD,KAAlCH,KAAKE,MAAMC,YAAYY,OAKjDE,IAAAC,cAAA,aACED,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,kCAGRD,IAAAC,cAAA,aACGT,EAAMe,IAAI,SAACC,EAAMC,GAChB,IAAMC,EAAOf,IACVgB,WAAW,SAAUH,GACrBX,OArCb,oEAsCaE,OAAO,OAEJa,EAAY,SAACF,EAAMG,GAIvB,IAHA,IAAIC,EAAM,EAENC,EAAIL,EAAKZ,OAAS,EACbL,EAAIsB,EAAI,EAAIA,EAAI,EAAI,EAAGtB,EAAIiB,EAAKZ,OAAQL,GAAK,EACpDqB,IACIA,GAAO,IAAME,SAASN,EAAKO,UAAUxB,EAAGA,EAAI,GAAI,KAClDoB,EAGJ,OAAe,IAARC,GAkBT,IAAMI,EAfN,SAAkBR,GAEhB,GAAIE,EAAUF,EAAM,IAAK,OAAO,EAGhC,IAAIS,EAAIH,SAASN,EAAKU,MAAM,EAAG,IAAS,IACpChB,EAAIiB,KAAKC,IAAI,EAAG,IAMpB,OAHED,KAAKE,OAAO,IAAMnB,EAAIe,IAAMf,EAAIe,IAAM,KACtCK,QAAQ,GAKEC,CAASf,GACvB,OACEV,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAIyB,MAAO,CAAEC,MAAOT,EAAQ,EAAI,MAAQ,UACrCA,GAEHlB,IAAAC,cAAA,UAAKO,GACLR,IAAAC,cAAA,UAAKS,QAtDfV,IAAAC,cAAA,MAAIyB,MAAO,CAAEC,MAAO,QAAS,sDA+DpCpD,EA5GM,CAASyB,IAAM4B,WA+GlBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOjC,IAAAC,cAAC1B,EAAG,MAAKsD","file":"static/js/main.0949e27b.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport crypto from \"crypto\";\n\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      server_seed: \"\",\n      amount: 10\n    };\n  }\n  render() {\n    // an example with 10 seeds\n\n    const chain = [this.state.server_seed];\n\n    for (let i = 0; i < this.state.amount; i++) {\n      chain.push(\n        crypto\n          .createHash(\"sha256\")\n          .update(chain[chain.length - 1])\n          .digest(\"hex\")\n      );\n    }\n\n    // the hash of bitcoin block 570128 (https://medium.com/@blazedev/blaze-com-crash-seeding-event-v2-d774d7aeeaad)\n    const clientSeed =\n      \"0000000000000000000415ebb64b0d51ccee0bb55826e43846e5bea777d91966\";\n\n    return (\n      <div className=\"App\">\n        <h3>Enter the server seed of your game</h3>\n        <input\n          value={this.state.server_seed}\n          onChange={e => this.setState({ server_seed: e.target.value })}\n        />\n        <br />\n        <br />\n        <h3>Enter the # of games to view before this one</h3>\n        <input\n          value={this.state.amount}\n          onChange={e => this.setState({ amount: e.target.value })}\n        />\n\n        <hr />\n        <h1>Crash points:</h1>\n\n        {!this.state.server_seed || this.state.server_seed.length !== 64 ? (\n          <h3 style={{ color: \"red\" }}>\n            Please enter a server seed to view this table\n          </h3>\n        ) : (\n          <table>\n            <thead>\n              <tr>\n                <th>Crash point</th>\n                <th>Seed</th>\n                <th>Hash (hmac with client seed)</th>\n              </tr>\n            </thead>\n            <tbody>\n              {chain.map((seed, index) => {\n                const hash = crypto\n                  .createHmac(\"sha256\", seed)\n                  .update(clientSeed)\n                  .digest(\"hex\");\n\n                const divisible = (hash, mod) => {\n                  let val = 0;\n\n                  let o = hash.length % 4;\n                  for (let i = o > 0 ? o - 4 : 0; i < hash.length; i += 4) {\n                    val =\n                      ((val << 16) + parseInt(hash.substring(i, i + 4), 16)) %\n                      mod;\n                  }\n\n                  return val === 0;\n                };\n\n                function getPoint(hash) {\n                  // In 1 of 15 games the game crashes instantly.\n                  if (divisible(hash, 15)) return 0;\n\n                  // Use the most significant 52-bit from the hash to calculate the crash point\n                  let h = parseInt(hash.slice(0, 52 / 4), 16);\n                  let e = Math.pow(2, 52);\n\n                  const point = (\n                    Math.floor((100 * e - h) / (e - h)) / 100\n                  ).toFixed(2);\n\n                  return point;\n                }\n\n                const point = getPoint(hash);\n                return (\n                  <tr>\n                    <td style={{ color: point < 2 ? \"red\" : \"green\" }}>\n                      {point}\n                    </td>\n                    <td>{seed}</td>\n                    <td>{hash}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}